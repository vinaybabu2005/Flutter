Question 21: Create a sample drawing app whose background should be white and where the user just draws something.
Hint 1:- Use the inbuilt paint library of Dart.

source code:
import 'package:flutter/material.dart';

void main() => runApp(const DrawingApp());

class DrawingApp extends StatelessWidget {
  const DrawingApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: DrawingPage(),
    );
  }
}

class DrawingPage extends StatefulWidget {
  const DrawingPage({super.key});

  @override
  State<DrawingPage> createState() => _DrawingPageState();
}

class _DrawingPageState extends State<DrawingPage> {
  List<Offset?> points = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Simple Drawing App")),
      body: GestureDetector(
        onPanUpdate: (details) {
          setState(() {
            // Add touch point relative to screen
            RenderBox renderBox = context.findRenderObject() as RenderBox;
            points.add(renderBox.globalToLocal(details.globalPosition));
          });
        },
        onPanEnd: (_) {
          setState(() {
            points.add(null); // separator between strokes
          });
        },
        child: CustomPaint(
          painter: MyPainter(points: points),
          size: Size.infinite,
        ),
      ),
      backgroundColor: Colors.white,
    );
  }
}

class MyPainter extends CustomPainter {
  final List<Offset?> points;

  MyPainter({required this.points});

  @override
  void paint(Canvas canvas, Size size) {
    Paint paint = Paint()
      ..color = Colors.black
      ..strokeWidth = 4.0
      ..strokeCap = StrokeCap.round;

    for (int i = 0; i < points.length - 1; i++) {
      if (points[i] != null && points[i + 1] != null) {
        canvas.drawLine(points[i]!, points[i + 1]!, paint);
      }
    }
  }

  @override
  bool shouldRepaint(MyPainter oldDelegate) => true;
}
